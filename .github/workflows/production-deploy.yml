
name: 'iTrax production deploy'

on: 
  push:
    branches:
      - 'production'
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  terraform:
    name: 'Stack update...'
    environment: PRODUCTION
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    runs-on: ubuntu-latest

    steps:

    - name: Checkout Client
      uses: actions/checkout@v3    

    - name: Replace Secrets
      uses: cschleiden/replace-tokens@v1
      with:
        files: '["./provider.tf"]'
      env:
        RGN: ${{ vars.RESOURCE_GROUP_NAME }}
        SAN: ${{ vars.TF_STORAGE_ACCOUNT_NAME }}
        CN:  ${{ vars.TF_CONTAINER_NAME }}
        SUB: ${{ vars.TF_SUBSCRIPTION_ID }}
        KEY: ${{ vars.TF_KEY_NAME }}

    - name: Terraform Setup
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    - name: Check AZ CLI
      run: |
        az --version
        
    - name: Check TF --version
      run: |
        terraform --version

    # - name: show files
    #   run: |
    #     ls -la

    # - name: show provider content
    #   run: |
    #     cat ./provider.tf

    - name: Terraform Init, Validate, Plan & Apply
      env:
        TF_VAR_client_id: "${{ secrets.ARM_CLIENT_ID }}"
        TF_VAR_client_secret: "${{ secrets.ARM_CLIENT_SECRET }}"      
      run: |
        terraform init
        terraform validate -no-color
        terraform plan -refresh=true -lock-timeout=5m -out=tfplan -no-color 
 #       terraform apply -auto-approve  -lock-timeout=5m -no-color tfplan
